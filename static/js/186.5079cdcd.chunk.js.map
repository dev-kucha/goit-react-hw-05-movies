{"version":3,"file":"static/js/186.5079cdcd.chunk.js","mappings":"4TAIMA,EAAa,QAEbC,EAAU,mCACVC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,IAAAA,IAAA,UAClBF,EADkB,qBACGF,EADH,YANP,MAMO,oBACwCC,IAH5D,cAEGI,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwBC,GAAxB,gGAEoBP,IAAAA,IAAA,UAClBF,EADkB,kBACAS,EADA,oBACcV,IAHlC,cAEGI,EAFH,yBAKIA,GALJ,gCAOHG,QAAQC,MAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,gGAEoBP,IAAAA,IAAA,UAClBF,EADkB,kBACAS,EADA,4BACsBV,IAH1C,cAEGI,EAFH,yBAKIA,GALJ,gCAOHG,QAAQC,MAAR,MAPG,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA0BF,GAA1B,gGAEoBP,IAAAA,IAAA,UAClBF,EADkB,kBACAS,EADA,4BACsBV,IAH1C,cAEGI,EAFH,yBAKIA,GALJ,gCAOHG,QAAQC,MAAR,MAPG,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,gGAEoBX,IAAAA,IAAA,UAClBF,EADkB,gCACca,EADd,oBAC+Bd,IAHnD,cAEGI,EAFH,yBAKIA,GALJ,gCAOHG,QAAQC,MAAR,MAPG,gF,oJChDQ,SAASO,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGAC2BT,EAAAA,EAAAA,IAAWI,GADtC,OACQM,EADR,OAEEF,EAAWE,EAAWjB,KAAKC,SAF7B,4CADc,uBAAC,WAAD,wBAMdiB,EACD,GAAE,CAACP,KAGF,+BACU,OAAPG,QAAO,IAAPA,OAAA,EAAAA,EAASK,QAAS,GACjB,wBACGL,EAAQM,KAAI,SAAAC,GAAM,OACjB,2BACE,wBACE,4BAASA,EAAOC,YAElB,uBAAID,EAAOE,WACX,mBACA,oBANOF,EAAOhB,GADC,OAYrB,uEAIP,C","sources":["APIs/themoviedbApi.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'day';\nconst API_KEY = '70cddabccebaf467901819a0b3b6e799';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function getTrendingToday() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/${MEDIA_TYPE}/${TIME_WINDOW}?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovie(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getCredits(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getReviews(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovies(query) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie/?query=${query}&api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getReviews } from 'APIs/themoviedbApi';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    async function fetchReviews() {\n      const resReviews = await getReviews(movieId);\n      setReviews(resReviews.data.results);\n    }\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews?.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <p>\n                <strong>{review.author}</strong>\n              </p>\n              <p>{review.content}</p>\n              <br />\n              <br />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We do not have any reviews for this movie.</p>\n      )}\n    </>\n  );\n}\n"],"names":["MEDIA_TYPE","API_KEY","BASE_URL","getTrendingToday","axios","response","data","results","console","error","getMovie","id","getCredits","getReviews","getMovies","query","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","resReviews","fetchReviews","length","map","review","author","content"],"sourceRoot":""}