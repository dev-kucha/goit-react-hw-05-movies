{"version":3,"file":"static/js/247.e6711898.chunk.js","mappings":"4TAEAA,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAa,QAEbC,EAAU,mCACVC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBJ,IAAAA,IAAA,oBACRC,EADQ,YANP,MAMO,oBAC6BC,IAHjD,cAEGG,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwBC,GAAxB,gGAEoBX,IAAAA,IAAA,iBAAoBW,EAApB,oBAAkCT,IAFtD,cAEGG,EAFH,yBAGIA,GAHJ,gCAKHG,QAAQC,MAAR,MALG,gFASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,gGAEoBX,IAAAA,IAAA,iBAAoBW,EAApB,4BAA0CT,IAF9D,cAEGG,EAFH,yBAGIA,GAHJ,gCAKHG,QAAQC,MAAR,MALG,gFASA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA0BF,GAA1B,gGAEoBX,IAAAA,IAAA,iBAAoBW,EAApB,4BAA0CT,IAF9D,cAEGG,EAFH,yBAGIA,GAHJ,gCAKHG,QAAQC,MAAR,MALG,gFASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,gGAEoBf,IAAAA,IAAA,UAClBG,EADkB,gCACcY,EADd,oBAC+Bb,IAHnD,cAEGG,EAFH,yBAKIA,GALJ,gCAOHG,QAAQC,MAAR,MAPG,gF,qJC1CQ,SAASO,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGAC2BV,EAAAA,EAAAA,IAAWK,GADtC,OACQM,EADR,OAEEF,EAAWE,EAAWjB,KAAKkB,MAF7B,4CADc,uBAAC,WAAD,wBAMdC,EACD,GAAE,CAACR,KAGF,iCACE,iCACCG,IACC,wBACGA,EAAQM,KAAI,SAAAC,GAAM,OACjB,0BACGA,EAAOC,eACN,gBACEC,IAAG,0CAAqCF,EAAOC,cAC/CE,IAAKH,EAAOI,QAGhB,0BACE,4BAASJ,EAAOI,OAAe,IAC9BJ,EAAOK,YAAa,8BAAML,EAAOK,UAAb,QACrB,mBACA,mBACA,uBAZKL,EAAOhB,GADC,QAsB5B,C","sources":["APIs/themoviedbApi.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'day';\nconst API_KEY = '70cddabccebaf467901819a0b3b6e799';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function getTrendingToday() {\n  try {\n    const response = await axios.get(\n      `/trending/${MEDIA_TYPE}/${TIME_WINDOW}?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovie(id) {\n  try {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getCredits(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getReviews(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovies(query) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie/?query=${query}&api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getCredits } from 'APIs/themoviedbApi';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n\n  const [credits, setCredits] = useState(null);\n\n  useEffect(() => {\n    async function fetchCredits() {\n      const resCredits = await getCredits(movieId);\n      setCredits(resCredits.data.cast);\n    }\n\n    fetchCredits();\n  }, [movieId]);\n\n  return (\n    <>\n      <h4>Cast</h4>\n      {credits && (\n        <ul>\n          {credits.map(credit => (\n            <li key={credit.id}>\n              {credit.profile_path && (\n                <img\n                  src={`https://image.tmdb.org/t/p/w200/${credit.profile_path}`}\n                  alt={credit.name}\n                />\n              )}\n              <p>\n                <strong>{credit.name}</strong>{' '}\n                {credit.character && <em>({credit.character})</em>}\n                <br />\n                <br />\n                <br />\n              </p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {/* {credits.cast} */}\n    </>\n  );\n}\n"],"names":["axios","MEDIA_TYPE","API_KEY","BASE_URL","getTrendingToday","response","data","results","console","error","getMovie","id","getCredits","getReviews","getMovies","query","Cast","movieId","useParams","useState","credits","setCredits","useEffect","resCredits","cast","fetchCredits","map","credit","profile_path","src","alt","name","character"],"sourceRoot":""}