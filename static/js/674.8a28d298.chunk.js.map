{"version":3,"file":"static/js/674.8a28d298.chunk.js","mappings":"4TAEAA,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAa,QAEbC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBH,IAAAA,IAAA,oBACRC,EADQ,YALP,MAKO,oBAC6BC,IAHjD,cAEGE,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwBC,GAAxB,gGAEoBV,IAAAA,IAAA,iBAAoBU,EAApB,oBAAkCR,IAFtD,cAEGE,EAFH,yBAGIA,GAHJ,gCAKHG,QAAQC,MAAR,MALG,gFASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,gGAEoBV,IAAAA,IAAA,iBAAoBU,EAApB,4BAA0CR,IAF9D,cAEGE,EAFH,yBAGIA,GAHJ,gCAKHG,QAAQC,MAAR,MALG,gFASA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA0BF,GAA1B,gGAEoBV,IAAAA,IAAA,iBAAoBU,EAApB,4BAA0CR,IAF9D,cAEGE,EAFH,yBAGIA,GAHJ,gCAKHG,QAAQC,MAAR,MALG,gFASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,gGAEoBd,IAAAA,IAAA,+BACGc,EADH,oBACoBZ,IAHxC,cAEGE,EAFH,yBAKIA,GALJ,gCAOHG,QAAQC,MAAR,MAPG,gF,qJC5CQ,SAASO,EAAT,GAA2B,IAATC,EAAQ,EAARA,KACzBC,GAAWC,EAAAA,EAAAA,MASjB,OACE,oBAAQC,KAAK,SAASC,QANJ,WAElBH,EAASD,EAAM,CAAEK,SAAS,GAC3B,EAGC,UACG,IADH,mBAKH,C,wBCdYC,GAAgBC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,sKCIX,SAASE,EAAT,GAAgC,EAART,KAAS,IACtCU,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAMMC,GAAWC,EAAAA,EAAAA,MAWjB,IATAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACyBxB,EAAAA,EAAAA,IAASiB,GADlC,OACQQ,EADR,OAEEJ,EAASI,EAAS7B,MAFpB,4CADc,uBAAC,WAAD,wBAMd8B,EACD,GAAE,CAACT,KAECG,EACH,OAAO,KAGT,IAnBsBO,EAmBd1B,EACNmB,EADMnB,GAAI2B,EACVR,EADUQ,YAAaC,EACvBT,EADuBS,eAAgBC,EACvCV,EADuCU,aAAcC,EACrDX,EADqDW,SAAUC,EAC/DZ,EAD+DY,OAGjE,OACE,iCACE,SAAC1B,EAAD,CAAQC,KAAMe,EAASW,SACvB,eAAGC,MAAO,CAAEC,SAAU,SAAtB,iBAAyClC,KACxC2B,IACC,gBACEQ,IAAG,0CAAqCR,GACxCS,IAAG,UAAKR,EAAL,cAIP,0BACGA,EADH,KACqB,IAAIS,KAAKR,GAAcS,cAD5C,OAGCR,IACC,4BACE,sCACA,uBAAIA,OAIPC,IACC,4BACE,oCACA,wBA9CcL,EA8CIK,EA7CjBL,EAAUa,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,aAiD7C,kDACA,2BACE,yBACE,SAAC9B,EAAD,CAAe+B,GAAG,OAAOX,MAAOX,EAAhC,qBAIF,yBACE,SAACT,EAAD,CAAe+B,GAAG,UAAlB,2BAGJ,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["APIs/themoviedbApi.js","components/GoBack/GoBack.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'day';\nconst API_KEY = '70cddabccebaf467901819a0b3b6e799';\n\nexport async function getTrendingToday() {\n  try {\n    const response = await axios.get(\n      `/trending/${MEDIA_TYPE}/${TIME_WINDOW}?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovie(id) {\n  try {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getCredits(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getReviews(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovies(query) {\n  try {\n    const response = await axios.get(\n      `/search/movie/?query=${query}&api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import { useNavigate } from 'react-router-dom';\n\nexport default function GoBack({ from }) {\n  const navigate = useNavigate();\n\n  //   console.log(from);\n\n  const handleClick = () => {\n    // console.log('cklickded');\n    navigate(from, { replace: true });\n  };\n\n  return (\n    <button type=\"button\" onClick={handleClick}>\n      {' '}\n      &#x27F5; Go back\n    </button>\n  );\n}\n","import { NavLink } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const NavLinkStyled = styled(NavLink)`\n  color: black;\n\n  &.active {\n    color: orange;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: orange;\n  }\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\n\nimport { getMovie } from 'APIs/themoviedbApi';\nimport GoBack from '../../components/GoBack/GoBack';\n\nimport { NavLinkStyled } from './MovieDetails.styled';\n\nexport default function MovieDetails({ from }) {\n  const { movieId } = useParams();\n  // console.log(movieId);\n  const [movie, setMovie] = useState(null);\n\n  const getGenresList = genresArr => {\n    return genresArr.map(genre => genre.name).join(', ');\n  };\n\n  const location = useLocation();\n\n  useEffect(() => {\n    async function fetchMovie() {\n      const resMovie = await getMovie(movieId);\n      setMovie(resMovie.data);\n    }\n\n    fetchMovie();\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const { id, poster_path, original_title, release_date, overview, genres } =\n    movie;\n\n  return (\n    <>\n      <GoBack from={location.state} />\n      <p style={{ fontSize: 0.6 + 'em' }}>id: {id}</p>\n      {poster_path && (\n        <img\n          src={`https://image.tmdb.org/t/p/w200/${poster_path}`}\n          alt={`${original_title} poster`}\n        />\n      )}\n\n      <h1>\n        {original_title} ({new Date(release_date).getFullYear()})\n      </h1>\n      {overview && (\n        <div>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n        </div>\n      )}\n\n      {genres && (\n        <div>\n          <h2>Genres</h2>\n          <p>{getGenresList(genres)}</p>\n        </div>\n      )}\n\n      <h4>Addition Information</h4>\n      <ul>\n        <li>\n          <NavLinkStyled to=\"cast\" state={location}>\n            Cast\n          </NavLinkStyled>\n        </li>\n        <li>\n          <NavLinkStyled to=\"reviews\">Reviews</NavLinkStyled>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n"],"names":["axios","MEDIA_TYPE","API_KEY","getTrendingToday","response","data","results","console","error","getMovie","id","getCredits","getReviews","getMovies","query","GoBack","from","navigate","useNavigate","type","onClick","replace","NavLinkStyled","styled","NavLink","MovieDetails","movieId","useParams","useState","movie","setMovie","location","useLocation","useEffect","resMovie","fetchMovie","genresArr","poster_path","original_title","release_date","overview","genres","state","style","fontSize","src","alt","Date","getFullYear","map","genre","name","join","to","Suspense","fallback"],"sourceRoot":""}