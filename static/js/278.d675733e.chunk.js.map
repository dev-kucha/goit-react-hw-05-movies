{"version":3,"file":"static/js/278.d675733e.chunk.js","mappings":"4TAEAA,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAa,QAEbC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBH,IAAAA,IAAA,oBACRC,EADQ,YALP,MAKO,oBAC6BC,IAHjD,cAEGE,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwBC,GAAxB,gGAEoBV,IAAAA,IAAA,iBAAoBU,EAApB,oBAAkCR,IAFtD,cAEGE,EAFH,yBAGIA,GAHJ,gCAKHG,QAAQC,MAAR,MALG,gFASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,gGAEoBV,IAAAA,IAAA,iBAAoBU,EAApB,4BAA0CR,IAF9D,cAEGE,EAFH,yBAGIA,GAHJ,gCAKHG,QAAQC,MAAR,MALG,gFASA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA0BF,GAA1B,gGAEoBV,IAAAA,IAAA,iBAAoBU,EAApB,4BAA0CR,IAF9D,cAEGE,EAFH,yBAGIA,GAHJ,gCAKHG,QAAQC,MAAR,MALG,gFASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,gGAEoBd,IAAAA,IAAA,+BACGc,EADH,oBACoBZ,IAHxC,cAEGE,EAFH,yBAKIA,GALJ,gCAOHG,QAAQC,MAAR,MAPG,gF,4IC1CQ,SAASO,IACtB,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,MAAjD,eAAOK,EAAP,KAAqBC,EAArB,KAqBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,2FACEhB,QAAQiB,IAAIL,GADd,UAEqBN,EAAAA,EAAAA,IAAUM,GAF/B,OAEQd,EAFR,OAGEiB,EAAgBjB,GAChBE,QAAQiB,IAAInB,GAJd,4CAJc,sBACTc,GADS,mCAWdM,EACD,GAAE,CAACN,KAGF,kBAAMO,SApBR,SAAkBC,GAChBA,EAAEC,iBACFR,EAAeH,EAChB,EAiBC,WACE,kBACEY,KAAK,OACLC,MAAOb,EACPc,SAAU,SAAAJ,GAAC,OAAIT,EAAcS,EAAEK,OAAOF,MAA3B,KAEb,mBAAQD,KAAK,SAASC,MAAM,GAA5B,oBAGCvB,QAAQiB,IAAIH,KAGlB,C","sources":["APIs/themoviedbApi.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'day';\nconst API_KEY = '70cddabccebaf467901819a0b3b6e799';\n\nexport async function getTrendingToday() {\n  try {\n    const response = await axios.get(\n      `/trending/${MEDIA_TYPE}/${TIME_WINDOW}?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovie(id) {\n  try {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getCredits(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getReviews(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovies(query) {\n  try {\n    const response = await axios.get(\n      `/search/movie/?query=${query}&api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import { useState, useEffect } from 'react';\n\nimport { getMovies } from 'APIs/themoviedbApi';\n\nexport default function Movies() {\n  const [searchText, setSearchText] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [findedMovies, setFindedMovies] = useState(null);\n\n  function onSubmit(e) {\n    e.preventDefault();\n    setSearchQuery(searchText);\n  }\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    async function fetchMovies() {\n      console.log(searchQuery);\n      const data = await getMovies(searchQuery);\n      setFindedMovies(data);\n      console.log(data);\n    }\n\n    fetchMovies();\n  }, [searchQuery]);\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        value={searchText}\n        onChange={e => setSearchText(e.target.value)}\n      />\n      <button type=\"submit\" value=\"\">\n        Search\n      </button>\n      {console.log(findedMovies)}\n    </form>\n  );\n}\n"],"names":["axios","MEDIA_TYPE","API_KEY","getTrendingToday","response","data","results","console","error","getMovie","id","getCredits","getReviews","getMovies","query","Movies","useState","searchText","setSearchText","searchQuery","setSearchQuery","findedMovies","setFindedMovies","useEffect","log","fetchMovies","onSubmit","e","preventDefault","type","value","onChange","target"],"sourceRoot":""}