{"version":3,"file":"static/js/223.0da578e6.chunk.js","mappings":"4TAEAA,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAa,QAEbC,EAAU,mCACVC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBJ,IAAAA,IAAA,oBACRC,EADQ,YANP,MAMO,oBAC6BC,IAHjD,cAEGG,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwBC,GAAxB,gGAEoBX,IAAAA,IAAA,iBAAoBW,EAApB,oBAAkCT,IAFtD,cAEGG,EAFH,yBAGIA,GAHJ,gCAKHG,QAAQC,MAAR,MALG,gFASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,gGAEoBX,IAAAA,IAAA,iBAAoBW,EAApB,4BAA0CT,IAF9D,cAEGG,EAFH,yBAGIA,GAHJ,gCAKHG,QAAQC,MAAR,MALG,gFASA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA0BF,GAA1B,gGAEoBX,IAAAA,IAAA,iBAAoBW,EAApB,4BAA0CT,IAF9D,cAEGG,EAFH,yBAGIA,GAHJ,gCAKHG,QAAQC,MAAR,MALG,gFASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,gGAEoBf,IAAAA,IAAA,UAClBG,EADkB,gCACcY,EADd,oBAC+Bb,IAHnD,cAEGG,EAFH,yBAKIA,GALJ,gCAOHG,QAAQC,MAAR,MAPG,gF,8JC5CQ,SAASO,EAAT,GAAqC,IAAXC,EAAU,EAAVA,OACjCC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,aACf,yBACE,UAAC,KAAD,CAAMC,GAAE,UAAKD,EAAMV,IAAMY,MAAO,CAAEC,KAAMN,GAAxC,UACGG,EAAMI,MADT,eACkBJ,EAAMK,oBADxB,aACkB,EAAoBC,MAAM,EAAG,GAD/C,QADON,EAAMV,GADA,KAStB,CCXc,SAASiB,IACtB,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAEA,GAAwCF,EAAAA,EAAAA,UAAS,MAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAOF,EAAaG,IAAI,SAO9BC,EAAAA,EAAAA,YAAU,WAAM,wCAId,qGAEyBzB,EAAAA,EAAAA,IAAUuB,GAFnC,OAEQhC,EAFR,OAGE4B,EAAgB5B,EAASC,KAAKC,SAHhC,4CAJc,sBACT8B,GADS,mCAWdG,EACD,GAAE,CAACH,IAQJ,OACE,iCACE,kBAAMI,SARgB,SAAAC,GACxBA,EAAEC,iBAEFP,EADkC,KAAfN,EAAoB,CAAEO,KAAMP,GAAe,CAAC,EAEhE,EAIG,WACE,kBACEc,KAAK,OACLC,MAAOf,EACPgB,SAAU,SAAAJ,GAAC,OAAIX,EAAcW,EAAEK,OAAOF,MAA3B,KAEb,mBAAQD,KAAK,SAASC,MAAM,GAA5B,uBAIAR,EAEc,OAAZL,QAAY,IAAZA,GAAAA,EAAcgB,QAChB,SAAChC,EAAD,CAAgBC,OAAQe,EAAciB,aAAcd,KAEpD,qEAJA,sDAQP,C","sources":["APIs/themoviedbApi.js","components/SearchedMovies/SearchedMovies.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'day';\nconst API_KEY = '70cddabccebaf467901819a0b3b6e799';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function getTrendingToday() {\n  try {\n    const response = await axios.get(\n      `/trending/${MEDIA_TYPE}/${TIME_WINDOW}?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovie(id) {\n  try {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getCredits(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getReviews(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovies(query) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie/?query=${query}&api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","// import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport default function SearchedMovies({ movies }) {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`${movie.id}`} state={{ from: location }}>\n            {movie.title} ({movie.release_date?.slice(0, 4)})\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { getMovies } from 'APIs/themoviedbApi';\nimport SearchedMovies from '../../components/SearchedMovies/SearchedMovies';\n\nexport default function Movies() {\n  const [searchText, setSearchText] = useState('');\n  // const [searchQuery, setSearchQuery] = useState('');\n  const [findedMovies, setFindedMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const name = searchParams.get('name');\n\n  // function onSubmit(e) {\n  //   e.preventDefault();\n  //   setSearchQuery(searchText);\n  // }\n\n  useEffect(() => {\n    if (!name) {\n      return;\n    }\n    async function fetchMovies() {\n      // console.log(searchQuery);\n      const response = await getMovies(name);\n      setFindedMovies(response.data.results);\n      // console.log(data);\n    }\n\n    fetchMovies();\n  }, [name]);\n\n  const updateQueryString = e => {\n    e.preventDefault();\n    const nextSearch = searchText !== '' ? { name: searchText } : {};\n    setSearchParams(nextSearch);\n  };\n\n  return (\n    <>\n      <form onSubmit={updateQueryString}>\n        <input\n          type=\"text\"\n          value={searchText}\n          onChange={e => setSearchText(e.target.value)}\n        />\n        <button type=\"submit\" value=\"\">\n          Search\n        </button>\n      </form>\n      {!name ? (\n        <p>Enter your search query.</p>\n      ) : findedMovies?.length ? (\n        <SearchedMovies movies={findedMovies} goBackParams={searchParams} />\n      ) : (\n        <p>We do not have any movie for this query.</p>\n      )}\n    </>\n  );\n}\n"],"names":["axios","MEDIA_TYPE","API_KEY","BASE_URL","getTrendingToday","response","data","results","console","error","getMovie","id","getCredits","getReviews","getMovies","query","SearchedMovies","movies","location","useLocation","map","movie","to","state","from","title","release_date","slice","Movies","useState","searchText","setSearchText","findedMovies","setFindedMovies","useSearchParams","searchParams","setSearchParams","name","get","useEffect","fetchMovies","onSubmit","e","preventDefault","type","value","onChange","target","length","goBackParams"],"sourceRoot":""}